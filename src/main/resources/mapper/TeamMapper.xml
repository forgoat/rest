<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rest.dao.TeamDao">
    <select id="queryAllTeam" resultType="com.rest.entity.Team">
        SELECT *
        FROM standard_seminar_system.team
        WHERE
        course_id=#{course_id}
        GROUP BY klass_id
    </select>

    <select id="queryStudentNoTeam" resultType="com.rest.entity.Student">
        SELECT * FROM student
        WHERE id IN(
        SELECT student_id FROM klass_student
        WHERE course_id=#{courseId} AND student_id NOT IN(
        SELECT student_id FROM team_student
        WHERE team_id IN(
        SELECT team_id FROM team
        WHERE course_id=#{courseId})))
    </select>

    <select id="queryMemberLimit" resultType="com.rest.entity.MemberLimitStrategy">
        SELECT *
        FROM standard_seminar_system.member_limit_strategy
        WHERE id=#{id}
    </select>

    <select id="queryCourseMemberLimitStrategy" resultType="com.rest.entity.CourseMemberLimitStrategy" parameterType="Long">
        SELECT *
        FROM standard_seminar_system.course_member_limit_strategy
        WHERE id=#{id}

    </select>

    <select id="queryTeamOrStrategy" resultType="com.rest.entity.TeamOrStrategy" parameterType="Long">
        SELECT *
        FROM standard_seminar_system.team_or_strategy
        WHERE  id=#{id}


    </select>

    <select id="queryTeamAndStrategy" resultType="com.rest.entity.TeamAndStrategy" parameterType="Long">
        SELECT *
        FROM standard_seminar_system.team_and_strategy
        WHERE id=#{id}

    </select>

    <select id="queryTeamStrategy" resultType="com.rest.entity.TeamStrategy" parameterType="Long">
        SELECT *
        FROM standard_seminar_system.team_strategy
        WHERE course_id=#{courseId}

    </select>

    <select id="queryConflictCourseStrategy" resultType="com.rest.entity.ConflictCourseStrategy" parameterType="Long">
        SELECT *
        FROM standard_seminar_system.conflict_course_strategy
        WHERE  id=#{id}


    </select>
    <insert id="createTeam" parameterType="com.rest.entity.Team">
        INSERT INTO standard_seminar_system.team(
        klass_id,
        course_id,
        leader_id,
        team_name,
        team_serial,
        klass_serial,
        status
        )VALUE
        (
        #{klassId},
        #{courseId},
        #{leaderId},
        #{teamName},
        #{klassSerial},
        #{teamSerial},
        1
        )

    </insert>

    <insert id="addTeammate" parameterType="Long">
        INSERT INTO standard_seminar_system.team_student(
        team_id,
        student_id
        )VALUE
        (
        #{teamId},
        #{studentId}
        )
    </insert>

    <insert id="updateTeamValidApplication" parameterType="com.rest.entity.TeamValidApplication">
        INSERT INTO standard_seminar_system.team_valid_application(
        team_id,
        teacher_id,
        status
        )VALUE
        (
        #{teamId},
        #{teacherId},
        1
        )ON DULPLICATE KEY UPDATE
        status=values(status)
    </insert>

    <insert id="updateKlassStudent" parameterType="com.rest.entity.KlassStudent">
         INSERT INTO standard_seminar_system.klass_student(
        klass_id,
        student_id,
        course_id,
        team_id
        )VALUE
        (
        #{klassId},
        #{studentId}
        #{courseId},
        #{teamId}
        )ON DULPLICATE KEY UPDATE
        team_id=values(teamId)
    </insert>
    <select id="findById" parameterType="long" resultType="com.rest.entity.Team">
        SELECT * FROM standard_seminar_system.team WHERE id=#{id}
    </select>
    <update id="setValid" parameterType="long">
        UPDATE standard_seminar_system.team SET status=1 WHERE id=#{teamId}
    </update>
    <update id="updateInfo">
        UPDATE standard_seminar_system.team
        <set>
            <if test="param2!=null ">
                team_name=#{param2},
            </if>
            <if test="param3!=null ">
                team_serial=#{param3}
            </if>
        </set>
        WHERE id=#{param1}
    </update>
    <delete id="deleteTeam" parameterType="long">
        DELETE FROM standard_seminar_system.team WHERE id=#{id}
    </delete>
    <insert id="save" parameterType="com.rest.entity.Team" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO standard_seminar_system.team(klass_id,course_id,leader_id,team_name,team_serial,status) VALUE (#{klassId},#{courseId},#{leaderId},#{teamName},#{teamSerial},1)
    </insert>
    <select id="findByCourseId" resultType="com.rest.entity.Team" parameterType="long">
        SELECT * FROM standard_seminar_system.team WHERE course_id=#{CourseId}
    </select>
    <delete id="deleteTeamByCourseId" parameterType="long">
        DELETE FROM standard_seminar_system.team WHERE course_id=#{courseId}
    </delete>

    <select id="queryMemberLimitStrategyById" resultType="com.rest.entity.MemberLimitStrategy" parameterType="Long">
        SELECT *
        FROM standard_seminar_system.course_member_limit_strategy
        WHERE id=#{id}
    </select>
</mapper>